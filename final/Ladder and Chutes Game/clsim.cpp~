#include <stdio.h>
#include <stdlib.h>
#include "random.hpp"
#include "hist.hpp"

int main(int argc,char *argv[]){
  int PLAYER = atoi(argv[1]);
  int pseudo = atoi(argv[2]);
  int move = 0;
  int totalmove = 0;
  int i = 0;
  int j = 0;
  int k = 0;
  double average;

  int players[PLAYER];
  int moves[pseudo];

  for(i=0;i<pseudo;i++){    
    move = 0;
    //Initializing players' starting point to 0 at the beginning of the game
    for(k=0;k<PLAYER;k++){
      players[k] = 0;
    }

    do{
      for(j=0;j<PLAYER;j++){
	players[j] += randui(1,6);

	//Chutes
	if(players[j] == 98 || players[j] == 95 || players[j] == 93){
	  players[j] -= 20;
	}
	if(players[j] == 87){
	  players[j] = 24;
	}
	if(players[j] == 64){
	  players[j] = 60;
	}
	if(players[j] == 56){
	  players[j] = 53;
	}
	if(players[j] == 62){
	  players[j] = 19;
	}
	if(players[j] == 47){
	  players[j] = 26;
	}
	if(players[j] == 49){
	  players[j] = 11;
	}
	if(players[j] == 16){
	  players[j] = 6;
	}

	//Ladders
	if(players[j] == 80 || players[j] == 71){
	  players[j] += 20;
	}
	if(players[j] == 28){
	  players[j] = 84;
	}
	if(players[j] == 51){
	  players[j] = 67;
	}
	if(players[j] == 36){
	  players[j] = 44;
	}
	if(players[j] == 21){
	  players[j] = 42;
	}
	if(players[j] == 9){
	  players[j] = 31;
	}
	if(players[j] == 4){
	  players[j] = 14;
	}
	if(players[j] == 1){
	  players[j] = 38;
	}

	//Finish line
	if(players[j] >= 100){
	 break;
	}
	//printf("%d\n",players[j]);
      }
      move++; //I interpreted "the average game length in number of moves" as number of rounds until one player finishes the game
    }while(players[j]<100);
    
    totalmove += move;
    moves[i] = move;
  }

  //Sorting
  int m, n, min, temp;
      for (m = 0;m<pseudo;m++){
        min = m;
        for (n=i;n<pseudo;n++){
          if(moves[n]<moves[min]){
            min = n;
          }
          temp = moves[m];
          moves[m] = moves[min];
          moves[min] = temp;
        }
      }


  average = (double)totalmove/(double)pseudo;

  printf("number of players: %d\nnumber of pseudomatches: %d\naverage game length in number of moves: %.2lf\nthe shortest game: %d\nthe longest game: %d\n",PLAYER,pseudo,average,moves[pseudo-1],moves[0]);
  

  //Finding the optimal position
  h1 hist[40];
  h1init(&hist[0],50,1,50,"31");
  h1init(&hist[1],50,1,50,"32");
  h1init(&hist[2],50,1,50,"33");
  h1init(&hist[3],50,1,50,"34");
  h1init(&hist[4],50,1,50,"35");
  h1init(&hist[5],50,1,50,"36");
  h1init(&hist[6],50,1,50,"37");
  h1init(&hist[7],50,1,50,"38");
  h1init(&hist[8],50,1,50,"39");
  h1init(&hist[9],50,1,50,"40");
  h1init(&hist[10],50,1,50,"41");
  h1init(&hist[11],50,1,50,"42");
  h1init(&hist[12],50,1,50,"43");
  h1init(&hist[13],50,1,50,"44");
  h1init(&hist[14],50,1,50,"45");
  h1init(&hist[15],50,1,50,"46");
  h1init(&hist[16],50,1,50,"47");
  h1init(&hist[17],50,1,50,"48");
  h1init(&hist[18],50,1,50,"49");
  h1init(&hist[19],50,1,50,"50");
  h1init(&hist[20],50,1,50,"51");
  h1init(&hist[21],50,1,50,"52");
  h1init(&hist[22],50,1,50,"53");
  h1init(&hist[23],50,1,50,"54");
  h1init(&hist[24],50,1,50,"55");
  h1init(&hist[25],50,1,50,"56");
  h1init(&hist[26],50,1,50,"57");
  h1init(&hist[27],50,1,50,"58");
  h1init(&hist[28],50,1,50,"59");
  h1init(&hist[29],50,1,50,"60");
  h1init(&hist[30],50,1,50,"61");
  h1init(&hist[31],50,1,50,"62");
  h1init(&hist[32],50,1,50,"63");
  h1init(&hist[33],50,1,50,"64");
  h1init(&hist[34],50,1,50,"65");
  h1init(&hist[35],50,1,50,"66");
  h1init(&hist[36],50,1,50,"67");
  h1init(&hist[37],50,1,50,"68");
  h1init(&hist[38],50,1,50,"69");
  h1init(&hist[39],50,1,50,"70");

  j = 0;
  for(int p=0;p<40;p++){

    
    for(i=0;i<pseudo;i++){    
      move = 0;
      //Initializing players' starting point to 0 at the beginning of the game
	players[j] = p;
      do{
	players[j] += randui(1,6);
	
	//Chutes
	if(players[j] == 98 || players[j] == 95 || players[j] == 93){
	  players[j] -= 20;
	}
	if(players[j] == 87){
	  players[j] = 24;
	}
	if(players[j] == 64){
	  players[j] = 60;
	}
	if(players[j] == 56){
	  players[j] = 53;
	}
	if(players[j] == 62){
	  players[j] = 19;
	}
	if(players[j] == 47){
	  players[j] = 26;
	}
	if(players[j] == 49){
	  players[j] = 11;
	}
	if(players[j] == 16){
	  players[j] = 6;
	}

	//Ladders
	if(players[j] == 80 || players[j] == 71){
	  players[j] += 20;
	}
	if(players[j] == 28){
	  players[j] = 84;
	}
	if(players[j] == 51){
	  players[j] = 67;
	}
	if(players[j] == 36){
	  players[j] = 44;
	}
	if(players[j] == 21){
	  players[j] = 42;
	}
	if(players[j] == 9){
	  players[j] = 31;
	}
	if(players[j] == 4){
	  players[j] = 14;
	}
	if(players[j] == 1){
	  players[j] = 38;
	}
	move++; //I interpreted "the average game length in number of moves" as number of rounds until one player finishes the game
      }while(players[j]<100);
      h1fill(&hist[p],move);
    }
    h1plot(&hist[p]);
  }
   
    return 0;
  }

